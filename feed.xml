<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title></title>
  
  <subtitle>No Coffee? No Coding!</subtitle>
  <link href="/feed.xml" rel="self"/>
  
  <link href="https://devmozz.github.io/"/>
  <updated>2018-04-22T21:46:53.339Z</updated>
  <id>https://devmozz.github.io/</id>
  
  <author>
    <name>Ha YunHyeong</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Android - TTS(TextToSpeech) 문자를 음성으로 출력하기</title>
    <link href="https://devmozz.github.io/2018/04/23/text-to-speech/"/>
    <id>https://devmozz.github.io/2018/04/23/text-to-speech/</id>
    <published>2018-04-22T20:54:29.000Z</published>
    <updated>2018-04-22T21:46:53.339Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>개인 공부 후 자료를 남기기 위한 목적임으로 내용 상에 큰 문제가 있을 수도 있습니다.<br>잘못된 내용이 있다면 언제든지 편하게 댓글 남겨주시면 감사하겠습니다.</p><ul><li>텍스트를 음성으로 읽어주는 기능이 있어서 소개하려고 한다.</li></ul></blockquote><img src="/2018/04/23/text-to-speech/android_image.png"><hr><h1 id="Layout-resource-file"><a href="#Layout-resource-file" class="headerlink" title="Layout resource file"></a>Layout resource file</h1><blockquote><p>텍스트를 입력할 <strong>EditText</strong>, 클릭하면 음성 출력을 실행시킬 <strong>Button</strong>으로 구성</p></blockquote><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//activity_main.xml</span></span><br><span class="line">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"utf-8"</span>?&gt;</span><br><span class="line">&lt;android.support.constraint.ConstraintLayout</span><br><span class="line">    xmlns:android=<span class="string">"http://schemas.android.com/apk/res/android"</span></span><br><span class="line">    xmlns:app=<span class="string">"http://schemas.android.com/apk/res-auto"</span></span><br><span class="line">    xmlns:tools=<span class="string">"http://schemas.android.com/tools"</span></span><br><span class="line">    android:layout_width=<span class="string">"match_parent"</span></span><br><span class="line">    android:layout_height=<span class="string">"match_parent"</span></span><br><span class="line">    tools:context=<span class="string">".MainActivity"</span>&gt;</span><br><span class="line"></span><br><span class="line">    &lt;LinearLayout</span><br><span class="line">        android:layout_width=<span class="string">"match_parent"</span></span><br><span class="line">        android:layout_height=<span class="string">"wrap_content"</span></span><br><span class="line">        android:orientation=<span class="string">"vertical"</span></span><br><span class="line">        app:layout_constraintBottom_toBottomOf=<span class="string">"parent"</span></span><br><span class="line">        app:layout_constraintLeft_toLeftOf=<span class="string">"parent"</span></span><br><span class="line">        app:layout_constraintRight_toRightOf=<span class="string">"parent"</span></span><br><span class="line">        app:layout_constraintTop_toTopOf=<span class="string">"parent"</span>&gt;</span><br><span class="line"></span><br><span class="line">        &lt;EditText</span><br><span class="line">            android:id=<span class="string">"@+id/edt_speech"</span></span><br><span class="line">            android:layout_width=<span class="string">"match_parent"</span></span><br><span class="line">            android:layout_height=<span class="string">"wrap_content"</span></span><br><span class="line">            android:hint=<span class="string">"텍스트를 입력하세요."</span>/&gt;</span><br><span class="line"></span><br><span class="line">        &lt;Button</span><br><span class="line">            android:id=<span class="string">"@+id/btn_ent"</span></span><br><span class="line">            style=<span class="string">"@style/Widget.AppCompat.Button.Borderless.Colored"</span></span><br><span class="line">            android:layout_width=<span class="string">"match_parent"</span></span><br><span class="line">            android:layout_height=<span class="string">"wrap_content"</span></span><br><span class="line">            android:text=<span class="string">"Speak"</span>/&gt;</span><br><span class="line"></span><br><span class="line">    &lt;/LinearLayout&gt;</span><br><span class="line"></span><br><span class="line">&lt;/android.support.constraint.ConstraintLayout&gt;</span><br></pre></td></tr></table></figure><h1 id="TTS-생성-및-초기화"><a href="#TTS-생성-및-초기화" class="headerlink" title="TTS 생성 및 초기화"></a>TTS 생성 및 초기화</h1><blockquote><p>TTS를 생성하고 <strong>OnInitListener</strong>로 초기화</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> Button btnEnter;</span><br><span class="line"><span class="keyword">private</span> EditText edtSpeech;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> TextToSpeech textToSpeech;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">    setContentView(R.layout.activity_main);</span><br><span class="line"></span><br><span class="line">    textToSpeech = <span class="keyword">new</span> TextToSpeech(<span class="keyword">this</span>, <span class="keyword">new</span> TextToSpeech.OnInitListener() &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onInit</span><span class="params">(<span class="keyword">int</span> status)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (status == TextToSpeech.SUCCESS) &#123;</span><br><span class="line">                <span class="comment">//사용할 언어를 설정</span></span><br><span class="line">                <span class="keyword">int</span> result = textToSpeech.setLanguage(Locale.KOREA);</span><br><span class="line">                <span class="comment">//언어 데이터가 없거나 혹은 언어가 지원하지 않으면...</span></span><br><span class="line">                <span class="keyword">if</span> (result == TextToSpeech.LANG_MISSING_DATA || result == TextToSpeech.LANG_NOT_SUPPORTED) &#123;</span><br><span class="line">                    Toast.makeText(MainActivity.<span class="keyword">this</span>, <span class="string">"이 언어는 지원하지 않습니다."</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    btnEnter.setEnabled(<span class="keyword">true</span>);</span><br><span class="line">                    <span class="comment">//음성 톤</span></span><br><span class="line">                    textToSpeech.setPitch(<span class="number">0.7f</span>);</span><br><span class="line">                    <span class="comment">//읽는 속도</span></span><br><span class="line">                    textToSpeech.setSpeechRate(<span class="number">1.2f</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    edtSpeech = (EditText) findViewById(R.id.edt_speech);</span><br><span class="line">    btnEnter = (Button) findViewById(R.id.btn_ent);</span><br><span class="line">    btnEnter.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">            Speech();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Speech</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    String text = edtSpeech.getText().toString();</span><br><span class="line">    <span class="comment">// QUEUE_FLUSH: Queue 값을 초기화한 후 값을 넣는다.</span></span><br><span class="line">    <span class="comment">// QUEUE_ADD: 현재 Queue에 값을 추가하는 옵션이다.</span></span><br><span class="line">    <span class="comment">// API 21</span></span><br><span class="line">    <span class="keyword">if</span> (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.LOLLIPOP)</span><br><span class="line">        textToSpeech.speak(text, TextToSpeech.QUEUE_FLUSH, <span class="keyword">null</span>, <span class="keyword">null</span>);</span><br><span class="line">    <span class="comment">// API 20</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        textToSpeech.speak(text, TextToSpeech.QUEUE_FLUSH, <span class="keyword">null</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 메모리 누출을 방지하게 위해 TTS를 중지</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onStop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">super</span>.onStop();</span><br><span class="line">    <span class="keyword">if</span> (textToSpeech != <span class="keyword">null</span>) &#123;</span><br><span class="line">        textToSpeech.stop();</span><br><span class="line">        textToSpeech.shutdown();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;개인 공부 후 자료를 남기기 위한 목적임으로 내용 상에 큰 문제가 있을 수도 있습니다.&lt;br&gt;잘못된 내용이 있다면 언제든지 편하게 댓글 남겨주시면 감사하겠습니다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;텍스트를 음성으로 읽어주는 기능이 있
      
    
    </summary>
    
      <category term="Android" scheme="https://devmozz.github.io/categories/Android/"/>
    
    
      <category term="Android" scheme="https://devmozz.github.io/tags/Android/"/>
    
      <category term="TTS" scheme="https://devmozz.github.io/tags/TTS/"/>
    
      <category term="TextToSpeech" scheme="https://devmozz.github.io/tags/TextToSpeech/"/>
    
  </entry>
  
  <entry>
    <title>Kotlin - Casting Object(객체 타입 변환)</title>
    <link href="https://devmozz.github.io/2018/04/21/kotlin02/"/>
    <id>https://devmozz.github.io/2018/04/21/kotlin02/</id>
    <published>2018-04-20T20:14:58.000Z</published>
    <updated>2018-04-22T21:47:16.997Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>개인 공부 후 자료를 남기기 위한 목적임으로 내용 상에 큰 문제가 있을 수도 있습니다.<br>잘못된 내용이 있다면 언제든지 편하게 댓글 남겨주시면 감사하겠습니다.</p></blockquote><img src="/2018/04/21/kotlin02/20170608001348.png" title="KOTLIN"><hr><h1 id="Casting-Object-이해하기"><a href="#Casting-Object-이해하기" class="headerlink" title="Casting Object 이해하기"></a>Casting Object 이해하기</h1><p>Type Conversion은 2가지 형태로 나눈다</p><ul><li>Implicit Conversion<ul><li>암시적으로 컴파일러가 자동으로 데이터 유형을 변환한다.</li></ul></li><li>Explicit Conversion<ul><li>변환 할 데이터 유형을 명시적으로 지정한다는 것을 의미한다.</li><li>예) String.valueOf, Integer.parseInt… 등..</li></ul></li></ul><p>자료형 변환</p><ul><li>Data Type Bigger(Safe Cast)<ul><li>Byte &gt; Short &gt; Int &gt; Long &gt; Float &gt; Double</li><li>예) Int에서 Double로 변환</li></ul></li><li>Data Type Smaller(Unsafe Cast)<ul><li>Double &gt; Float &gt; Long &gt; Int &gt; Short &gt; Byte</li><li>데이터가 큰 저장 영역에서 작은 데이터 영역으로 이동할 때 데이터가 손실이 되기 때문에 안전하지 않다</li></ul></li></ul><hr><h1 id="Kotlin-Casting-Object-이해하기"><a href="#Kotlin-Casting-Object-이해하기" class="headerlink" title="Kotlin Casting Object 이해하기"></a>Kotlin Casting Object 이해하기</h1><p>Implicit Conversion을 지원하지 않는다.</p><ul><li>Kotlin은 컴파일러가 의도를 추측하는 것을 극도로 싫어한다.</li><li>숫자 형식 변환을 포함해서 언어의 모든 내용을 명시적으로 표현해야 한다.</li></ul><p>Explicit Conversion Method(명시적 변환 메소드)</p><ul><li>toByte(): Byte</li><li>toShort(): Short</li><li>toInt(): Int</li><li>toLong(): Long</li><li>toFloat(): Float</li><li>toDouble(): Double</li><li>toChar(): Char</li></ul><blockquote><p>String &gt; Int로 변환<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">fun <span class="title">main</span><span class="params">(args: Array&lt;String&gt;)</span> </span>&#123;</span><br><span class="line">    var a = <span class="string">"20"</span></span><br><span class="line">    var b = <span class="string">"30"</span></span><br><span class="line"></span><br><span class="line">    var result = a.toInt() + b.toInt()</span><br><span class="line">    print(<span class="string">"$&#123;result&#125;"</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// result = 50</span></span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p>변수에 data type을 return<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">fun <span class="title">main</span><span class="params">(args: Array&lt;String&gt;)</span> </span>&#123;</span><br><span class="line">    var a = <span class="number">1000</span></span><br><span class="line">    print(<span class="string">"a data type? $&#123;a.javaClass.kotlin.qualifiedName&#125;"</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// a data type? kotlin.Int</span></span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p>Safe cast<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">fun <span class="title">main</span><span class="params">(args: Array&lt;String&gt;)</span> </span>&#123;</span><br><span class="line">    var a = <span class="number">100</span></span><br><span class="line">    var b: Long = a.toLong()</span><br><span class="line">    print(<span class="string">"b data type? $&#123;b.javaClass.kotlin.qualifiedName&#125;"</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// b data type? kotlin.Long</span></span><br></pre></td></tr></table></figure></p></blockquote><ul><li>데이터 손실이 없다.</li></ul><blockquote><p>Unsafe cast<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">fun <span class="title">main</span><span class="params">(args: Array&lt;String&gt;)</span> </span>&#123;</span><br><span class="line">    var a: Float = <span class="number">100.2f</span></span><br><span class="line">    var b: Int = a.toInt()</span><br><span class="line">    print(<span class="string">"b data type? $&#123;b.javaClass.kotlin.qualifiedName&#125;"</span>)</span><br><span class="line">    print(<span class="string">"b: $&#123;b&#125;"</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// b data type? kotlin.Int</span></span><br><span class="line"><span class="comment">// b: 100</span></span><br></pre></td></tr></table></figure></p></blockquote><ul><li>0.2에 데이터 손실이 생겼다(아까워라 T_T).</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;개인 공부 후 자료를 남기기 위한 목적임으로 내용 상에 큰 문제가 있을 수도 있습니다.&lt;br&gt;잘못된 내용이 있다면 언제든지 편하게 댓글 남겨주시면 감사하겠습니다.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;img src=&quot;/2018
      
    
    </summary>
    
      <category term="Kotlin" scheme="https://devmozz.github.io/categories/Kotlin/"/>
    
    
      <category term="Android" scheme="https://devmozz.github.io/tags/Android/"/>
    
      <category term="Kotlin" scheme="https://devmozz.github.io/tags/Kotlin/"/>
    
      <category term="Casting" scheme="https://devmozz.github.io/tags/Casting/"/>
    
      <category term="Type" scheme="https://devmozz.github.io/tags/Type/"/>
    
      <category term="Object" scheme="https://devmozz.github.io/tags/Object/"/>
    
      <category term="Safe" scheme="https://devmozz.github.io/tags/Safe/"/>
    
      <category term="Unsafe" scheme="https://devmozz.github.io/tags/Unsafe/"/>
    
      <category term="Implicit" scheme="https://devmozz.github.io/tags/Implicit/"/>
    
      <category term="Explicit" scheme="https://devmozz.github.io/tags/Explicit/"/>
    
      <category term="Conversion" scheme="https://devmozz.github.io/tags/Conversion/"/>
    
  </entry>
  
  <entry>
    <title>Kotlin - Function, Variable and Class</title>
    <link href="https://devmozz.github.io/2018/04/18/kotlin01/"/>
    <id>https://devmozz.github.io/2018/04/18/kotlin01/</id>
    <published>2018-04-17T22:03:43.000Z</published>
    <updated>2018-04-22T21:50:38.667Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>개인 공부 후 자료를 남기기 위한 목적임으로 내용 상에 큰 문제가 있을 수도 있습니다.<br>잘못된 내용이 있다면 언제든지 편하게 댓글 남겨주시면 감사하겠습니다.</p></blockquote><img src="/2018/04/18/kotlin01/20170608001348.png" title="KOTLIN"><blockquote><p>Function 이해하기</p></blockquote><ul><li><p>2자리 숫자 사이에서 최대 값을 찾는다.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">fun <span class="title">max2Numbers</span><span class="params">(a: Int, b: Int)</span>: Int </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">if</span> (a &gt; b) a <span class="keyword">else</span> b</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//단순화 된 방식으로 위의 기능을 다시 정의</span></span><br><span class="line"><span class="function">fun <span class="title">max2Numbers</span><span class="params">(a: Int, b: Int)</span>: Int </span>= <span class="keyword">if</span> (a &gt; b) a <span class="keyword">else</span> b</span><br><span class="line"></span><br><span class="line"><span class="function">fun <span class="title">main</span><span class="params">(args: Array&lt;String&gt;)</span> </span>&#123;</span><br><span class="line">    println(<span class="string">"최대 값은 : $&#123;max2Numbers(1000, 100)&#125;"</span>)</span><br></pre></td></tr></table></figure></li><li><p>최대 값은 : 1000</p></li></ul><hr><blockquote><p>Variable 이해하기</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Mutable reference</span></span><br><span class="line">var a = <span class="number">100L</span> <span class="comment">// Long</span></span><br><span class="line"><span class="comment">//Immutable reference</span></span><br><span class="line">val b = <span class="number">0.1F</span> <span class="comment">// Float</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//변수를 명시적으로 선언하기</span></span><br><span class="line">var a: Int = <span class="number">10</span></span><br><span class="line">var <span class="keyword">char</span>: Char = <span class="string">'C'</span></span><br><span class="line">var string: String = <span class="string">"Demo"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//Multi lines String</span></span><br><span class="line">var string: String = <span class="string">""</span><span class="string">"</span></span><br><span class="line"><span class="string">    첫번 째 라인</span></span><br><span class="line"><span class="string">    두번 째 라인</span></span><br><span class="line"><span class="string">    세번 째 라인</span></span><br><span class="line"><span class="string">    "</span><span class="string">""</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//Array</span></span><br><span class="line">var arrayNumber: IntArray = intArrayOf(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>)</span><br><span class="line">var arrayLong: LongArray = longArrayOf(<span class="number">1000L</span>, <span class="number">2000L</span>, <span class="number">3000L</span>, <span class="number">4000L</span>)</span><br><span class="line">var arrayFloat: FloatArray = floatArrayOf(<span class="number">0.1f</span>, <span class="number">0.2f</span>, <span class="number">0.3f</span>, <span class="number">0.4f</span>)</span><br><span class="line">var arrayDouble: DoubleArray = doubleArrayOf(<span class="number">0.1</span>, <span class="number">0.2</span>, <span class="number">0.3</span>, <span class="number">0.4</span>)</span><br></pre></td></tr></table></figure><hr><blockquote><p>클래스와 속성 이해하기</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Java class</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Person</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> age;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> gender; <span class="comment">// 0은 여자, 1은 남자</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Person</span><span class="params">()</span> </span>&#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Person</span><span class="params">(String name, <span class="keyword">int</span> age, <span class="keyword">boolean</span> gender)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">        <span class="keyword">this</span>.gender = gender;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123; <span class="keyword">return</span> name; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123; <span class="keyword">this</span>.name = name; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getAge</span><span class="params">()</span> </span>&#123; <span class="keyword">return</span> age; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAge</span><span class="params">(<span class="keyword">int</span> age)</span> </span>&#123; <span class="keyword">this</span>.age = age; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isGender</span><span class="params">()</span> </span>&#123; <span class="keyword">return</span> gender; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setGender</span><span class="params">(<span class="keyword">boolean</span> gender)</span> </span>&#123; <span class="keyword">this</span>.gender = gender; &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>2개의 생성자, 3개의 Properties와 Setter/Getter… 늘 이런식으로 클래스를 만들어야만 했다.</li><li>Kotlin은 정말 심플하게 클래스를 정의할 수 있다.</li><li><p>단 1줄 이면 가능하다.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Kotlin class</span></span><br><span class="line">class Person(var name: String, var age: Int, var gender: Boolean)</span><br><span class="line"></span><br><span class="line"><span class="function">fun <span class="title">main</span><span class="params">(args: Array&lt;String&gt;)</span> </span>&#123;</span><br><span class="line">    var person = Person(<span class="string">"Mozz"</span>, <span class="number">28</span>, <span class="keyword">false</span>)</span><br><span class="line">    println(<span class="string">"Before"</span>)</span><br><span class="line">    println(<span class="string">"Person.Person 이름 : $&#123;person.name&#125;"</span>)</span><br><span class="line">    println(<span class="string">"Person.Person 나이 : $&#123;person.age&#125;"</span>)</span><br><span class="line">    println(<span class="string">"Person.Person 성별 : $&#123;person.gender&#125;"</span>)</span><br><span class="line"></span><br><span class="line">    println()</span><br><span class="line"></span><br><span class="line">    person = Person(<span class="string">"Mily"</span>, <span class="number">18</span>, <span class="keyword">true</span>)</span><br><span class="line">    println(<span class="string">"After..."</span>)</span><br><span class="line">    person.age = <span class="number">10</span></span><br><span class="line">    person.name = <span class="string">"Mily"</span></span><br><span class="line">    person.gender = <span class="keyword">true</span></span><br><span class="line">    println(<span class="string">"Person.Person 이름 : $&#123;person.name&#125;"</span>)</span><br><span class="line">    println(<span class="string">"Person.Person 나이 : $&#123;person.age&#125;"</span>)</span><br><span class="line">    println(<span class="string">"Person.Person 성별 : $&#123;person.gender&#125;"</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>예제 만들기</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">class Rectangle(val height: Int, val width: Int) &#123;</span><br><span class="line">    val isRectangle: Boolean</span><br><span class="line">        get() = height == width</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Random</span><br><span class="line"></span><br><span class="line"><span class="function">fun <span class="title">main</span><span class="params">(args: Array&lt;String&gt;)</span> </span>&#123;</span><br><span class="line">    val random = Random()</span><br><span class="line">    val rectangle = Rectangle(random.nextInt(), random.nextInt())</span><br><span class="line">    println(<span class="string">"높이? $&#123;rectangle.height&#125;"</span>)</span><br><span class="line">    println(<span class="string">"넓이? $&#123;rectangle.width&#125;"</span>)</span><br><span class="line">    println(<span class="string">"직사각형? $&#123;rectangle.isRectangle&#125;"</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>높이? 1009213259</p></li><li>넓이? -259066241</li><li>동그라미? false (직사각형이 될 일이 있을까?)</li></ul><p>오늘은 여기까지…….</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;개인 공부 후 자료를 남기기 위한 목적임으로 내용 상에 큰 문제가 있을 수도 있습니다.&lt;br&gt;잘못된 내용이 있다면 언제든지 편하게 댓글 남겨주시면 감사하겠습니다.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;img src=&quot;/2018
      
    
    </summary>
    
      <category term="Kotlin" scheme="https://devmozz.github.io/categories/Kotlin/"/>
    
    
      <category term="Android" scheme="https://devmozz.github.io/tags/Android/"/>
    
      <category term="Kotlin" scheme="https://devmozz.github.io/tags/Kotlin/"/>
    
      <category term="Function" scheme="https://devmozz.github.io/tags/Function/"/>
    
      <category term="Variable" scheme="https://devmozz.github.io/tags/Variable/"/>
    
      <category term="Class" scheme="https://devmozz.github.io/tags/Class/"/>
    
      <category term="Properties" scheme="https://devmozz.github.io/tags/Properties/"/>
    
  </entry>
  
  <entry>
    <title>Android - Retrofit and RxJava</title>
    <link href="https://devmozz.github.io/2018/04/16/r2nrj/"/>
    <id>https://devmozz.github.io/2018/04/16/r2nrj/</id>
    <published>2018-04-15T20:56:57.000Z</published>
    <updated>2018-04-16T00:07:22.565Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>개인 공부 후 자료를 남기기 위한 목적임으로 내용 상에 큰 문제가 있을 수도 있습니다.<br>잘못된 내용이 있다면 언제든지 편하게 댓글 남겨주시면 감사하겠습니다.</p><ul><li><strong><a href="http://square.github.io/retrofit/" target="_blank" rel="noopener">Retrofit</a></strong> + <strong><a href="https://github.com/ReactiveX/RxJava" target="_blank" rel="noopener">RxJava</a></strong>를 사용해서 HTTP RESTAPI 구현</li></ul></blockquote><h1 id="프로젝트에-사용할-준비물"><a href="#프로젝트에-사용할-준비물" class="headerlink" title="프로젝트에 사용할 준비물"></a>프로젝트에 사용할 준비물</h1><p>먼저 라이브러리를 <strong>Gradle</strong>에 다음과 같이 추가하고 적용한다.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Retrofit2</span></span><br><span class="line">implementation <span class="string">'com.squareup.retrofit2:converter-gson:2.3.0'</span></span><br><span class="line">implementation <span class="string">'com.squareup.retrofit2:adapter-rxjava2:2.3.0'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//RxJava</span></span><br><span class="line">implementation <span class="string">"io.reactivex.rxjava2:rxjava:2.1.7"</span></span><br><span class="line">implementation <span class="string">"io.reactivex.rxjava2:rxandroid:2.0.1"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//Support</span></span><br><span class="line">implementation <span class="string">'com.android.support:cardview-v7:27.1.1'</span></span><br><span class="line">implementation <span class="string">'com.android.support:recyclerview-v7:27.1.1'</span></span><br></pre></td></tr></table></figure><p><em>AndroidMenifest.xml</em>에 <em>Internt</em>을 추가한다.<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;uses-permission android:name=<span class="string">"android.permission.INTERNET"</span>/&gt;</span><br></pre></td></tr></table></figure></p><p><strong><a href="http://jsonplaceholder.typicode.com" target="_blank" rel="noopener">Fake Online REST API</a></strong>를 준비</p><img src="/2018/04/16/r2nrj/jsonfake.gif"><ul><li><strong><a href="http://jsonplaceholder.typicode.com/comments" target="_blank" rel="noopener">http://jsonplaceholder.typicode.com/comments</a></strong></li></ul><h1 id="Pojo-Model"><a href="#Pojo-Model" class="headerlink" title="Pojo Model"></a>Pojo Model</h1><p><strong>Json</strong>을 <strong>Pojo</strong> 모델로 변환 하자</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Comment</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> String email;</span><br><span class="line">    <span class="keyword">private</span> String body;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Comment</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Comment</span><span class="params">(String name, String email, String body)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        <span class="keyword">this</span>.email = email;</span><br><span class="line">        <span class="keyword">this</span>.body = body;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getEmail</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> email;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setEmail</span><span class="params">(String email)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.email = email;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getBody</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> body;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setBody</span><span class="params">(String body)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.body = body;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Retrofit2-with-RxJava"><a href="#Retrofit2-with-RxJava" class="headerlink" title="Retrofit2 with RxJava"></a>Retrofit2 with RxJava</h1><ul><li>Retrofit은 <strong>interface</strong>를 정의하여 HTTP 통신을 할 준비를 한다.</li><li><strong>@Get Annotation</strong>을 추가한다.</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Retrofit Api Method</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">CommentAPI</span> </span>&#123;</span><br><span class="line">    <span class="meta">@GET</span>(<span class="string">"comments"</span>)</span><br><span class="line">    Observable&lt;List&lt;Comment&gt;&gt; getComments();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>통신을 하기 위해서 <strong>Instance</strong>를 생성한다.</li><li>Rxjava의 <strong>Observable<repo></repo></strong>을 통해서 어떤 클래스를 통해서 <strong>Response</strong> 받을 것인지 지정해준다.</li><li><strong>GsonConverter</strong>를 통해 <strong>Json</strong>으로 파싱 후 위에 지정한 <strong>Pojo</strong> 클래스의 멤버 변수에 대입한다.<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Retrofit 설정</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RetrofitClient</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Retrofit retrofitInstance;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">RetrofitClient</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Retrofit <span class="title">getInstance</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (retrofitInstance == <span class="keyword">null</span>)</span><br><span class="line">            retrofitInstance = <span class="keyword">new</span> Retrofit.Builder()</span><br><span class="line">                    .baseUrl(<span class="string">"http://jsonplaceholder.typicode.com/"</span>)</span><br><span class="line">                    .addConverterFactory(GsonConverterFactory.create())</span><br><span class="line">                    .addCallAdapterFactory(RxJava2CallAdapterFactory.create())</span><br><span class="line">                    .build();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> retrofitInstance;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h1 id="Layout-resource-file"><a href="#Layout-resource-file" class="headerlink" title="Layout resource file"></a>Layout resource file</h1><p>자 이제 Layout을 아래와 같이 적용해 보자.</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line">** activity_main.xml **</span><br><span class="line">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"utf-8"</span>?&gt;</span><br><span class="line">&lt;RelativeLayout</span><br><span class="line">    xmlns:android=<span class="string">"http://schemas.android.com/apk/res/android"</span></span><br><span class="line">    xmlns:tools=<span class="string">"http://schemas.android.com/tools"</span></span><br><span class="line">    android:layout_width=<span class="string">"match_parent"</span></span><br><span class="line">    android:layout_height=<span class="string">"match_parent"</span></span><br><span class="line">    tools:context=<span class="string">".MainActivity"</span>&gt;</span><br><span class="line"></span><br><span class="line">    &lt;android.support.v7.widget.RecyclerView</span><br><span class="line">        android:id=<span class="string">"@+id/recycler"</span></span><br><span class="line">        android:layout_width=<span class="string">"wrap_content"</span></span><br><span class="line">        android:layout_height=<span class="string">"wrap_content"</span>/&gt;</span><br><span class="line"></span><br><span class="line">&lt;/RelativeLayout&gt;</span><br><span class="line"></span><br><span class="line">** row_item.xml **</span><br><span class="line">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"utf-8"</span>?&gt;</span><br><span class="line">&lt;RelativeLayout</span><br><span class="line">    xmlns:android=<span class="string">"http://schemas.android.com/apk/res/android"</span></span><br><span class="line">    xmlns:app=<span class="string">"http://schemas.android.com/apk/res-auto"</span></span><br><span class="line">    android:layout_width=<span class="string">"match_parent"</span></span><br><span class="line">    android:layout_height=<span class="string">"wrap_content"</span>&gt;</span><br><span class="line"></span><br><span class="line">    &lt;android.support.v7.widget.CardView</span><br><span class="line">        android:layout_width=<span class="string">"match_parent"</span></span><br><span class="line">        android:layout_height=<span class="string">"wrap_content"</span></span><br><span class="line">        android:layout_margin=<span class="string">"8dp"</span></span><br><span class="line">        android:background=<span class="string">"@android:color/white"</span></span><br><span class="line">        app:cardCornerRadius=<span class="string">"4dp"</span></span><br><span class="line">        app:cardElevation=<span class="string">"8dp"</span>&gt;</span><br><span class="line"></span><br><span class="line">        &lt;LinearLayout</span><br><span class="line">            android:layout_width=<span class="string">"match_parent"</span></span><br><span class="line">            android:layout_height=<span class="string">"wrap_content"</span></span><br><span class="line">            android:layout_margin=<span class="string">"8dp"</span></span><br><span class="line">            android:orientation=<span class="string">"vertical"</span>&gt;</span><br><span class="line"></span><br><span class="line">            &lt;TextView</span><br><span class="line">                android:id=<span class="string">"@+id/txt_name"</span></span><br><span class="line">                android:layout_width=<span class="string">"wrap_content"</span></span><br><span class="line">                android:layout_height=<span class="string">"wrap_content"</span></span><br><span class="line">                android:text=<span class="string">""</span></span><br><span class="line">                android:textSize=<span class="string">"12sp"</span></span><br><span class="line">                android:textStyle=<span class="string">"bold"</span>/&gt;</span><br><span class="line"></span><br><span class="line">            &lt;TextView</span><br><span class="line">                android:id=<span class="string">"@+id/txt_email"</span></span><br><span class="line">                android:layout_width=<span class="string">"wrap_content"</span></span><br><span class="line">                android:layout_height=<span class="string">"wrap_content"</span></span><br><span class="line">                android:text=<span class="string">""</span></span><br><span class="line">                android:textSize=<span class="string">"12sp"</span></span><br><span class="line">                android:textStyle=<span class="string">"normal"</span>/&gt;</span><br><span class="line"></span><br><span class="line">            &lt;TextView</span><br><span class="line">                android:id=<span class="string">"@+id/txt_body"</span></span><br><span class="line">                android:layout_width=<span class="string">"wrap_content"</span></span><br><span class="line">                android:layout_height=<span class="string">"wrap_content"</span></span><br><span class="line">                android:text=<span class="string">""</span></span><br><span class="line">                android:textSize=<span class="string">"12sp"</span></span><br><span class="line">                android:textStyle=<span class="string">"normal"</span>/&gt;</span><br><span class="line"></span><br><span class="line">        &lt;/LinearLayout&gt;</span><br><span class="line"></span><br><span class="line">    &lt;/android.support.v7.widget.CardView&gt;</span><br><span class="line"></span><br><span class="line">&lt;/RelativeLayout&gt;</span><br></pre></td></tr></table></figure><h1 id="RecyclerView-Adapter-만들기"><a href="#RecyclerView-Adapter-만들기" class="headerlink" title="RecyclerView Adapter 만들기"></a>RecyclerView Adapter 만들기</h1><p>자! 이제 <strong>RecyclerView</strong>를 사용하여 <strong>Adapter</strong> 구현하자.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">** ViewHolder **</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CommentViewHolder</span> <span class="keyword">extends</span> <span class="title">RecyclerView</span>.<span class="title">ViewHolder</span> </span>&#123;</span><br><span class="line">    TextView txtName, txtEmail, txtBody;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">CommentViewHolder</span><span class="params">(View itemView)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(itemView);</span><br><span class="line"></span><br><span class="line">        txtName = (TextView) itemView.findViewById(R.id.txt_name);</span><br><span class="line">        txtEmail = (TextView) itemView.findViewById(R.id.txt_email);</span><br><span class="line">        txtBody = (TextView) itemView.findViewById(R.id.txt_body);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">** Adapter **</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CommentAdapter</span> <span class="keyword">extends</span> <span class="title">RecyclerView</span>.<span class="title">Adapter</span>&lt;<span class="title">CommentViewHolder</span>&gt; </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Context context;</span><br><span class="line">    <span class="keyword">private</span> List&lt;Comment&gt; commentList;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">CommentAdapter</span><span class="params">(Context context, List&lt;Comment&gt; commentList)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.context = context;</span><br><span class="line">        <span class="keyword">this</span>.commentList = commentList;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@NonNull</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> CommentViewHolder <span class="title">onCreateViewHolder</span><span class="params">(@NonNull ViewGroup parent, <span class="keyword">int</span> viewType)</span> </span>&#123;</span><br><span class="line">        View view = LayoutInflater.from(parent.getContext())</span><br><span class="line">                .inflate(R.layout.row_item, parent, <span class="keyword">false</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> CommentViewHolder(view);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onBindViewHolder</span><span class="params">(@NonNull CommentViewHolder holder, <span class="keyword">int</span> position)</span> </span>&#123;</span><br><span class="line">        holder.txtName.setText(String.valueOf(commentList.get(position).getName()));</span><br><span class="line">        holder.txtEmail.setText(String.valueOf(commentList.get(position).getEmail()));</span><br><span class="line">        holder.txtBody.setText(String.format(<span class="string">"%s..."</span>, commentList.get(position).getBody()).substring(<span class="number">0</span>, <span class="number">25</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getItemCount</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> commentList.size();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="데이터를-응답-받아서-처리하기"><a href="#데이터를-응답-받아서-처리하기" class="headerlink" title="데이터를 응답 받아서 처리하기"></a>데이터를 응답 받아서 처리하기</h1><ul><li>Scheduler 설정<ul><li><em>subscribeOn</em>: Observable의 subscribe()가 실행되는 스레드를 바꿔줍니다.</li><li><em>observeOn</em>: <em>subscribe</em> 직전에 observeOn(AndroidSchedulers.mainThread())를 사용하여 onNext() 메서드가 UI Thread에서 실행되도록 구성되어 있다.</li><li><a href="http://reactivex.io/documentation/ko/scheduler.html" target="_blank" rel="noopener">공식 문서</a></li></ul></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">    <span class="keyword">private</span> CommentAPI commentAPI;</span><br><span class="line">    <span class="keyword">private</span> RecyclerView recyclerView;</span><br><span class="line">    <span class="keyword">private</span> CompositeDisposable compositeDisposable = <span class="keyword">new</span> CompositeDisposable();</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line"></span><br><span class="line">        Retrofit retrofit = RetrofitClient.getInstance();</span><br><span class="line">        commentAPI = retrofit.create(CommentAPI.class);</span><br><span class="line"></span><br><span class="line">        recyclerView = (RecyclerView) findViewById(R.id.recycler);</span><br><span class="line">        recyclerView.setHasFixedSize(<span class="keyword">true</span>);</span><br><span class="line">        recyclerView.setLayoutManager(<span class="keyword">new</span> LinearLayoutManager(<span class="keyword">this</span>));</span><br><span class="line"></span><br><span class="line">        importingData();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">importingData</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        compositeDisposable.add(commentAPI.getComments()</span><br><span class="line">                .subscribeOn(Schedulers.io())               </span><br><span class="line">                .observeOn(AndroidSchedulers.mainThread())</span><br><span class="line">                .subscribe(<span class="keyword">new</span> Consumer&lt;List&lt;Comment&gt;&gt;() &#123;</span><br><span class="line">                    <span class="meta">@Override</span></span><br><span class="line">                    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">accept</span><span class="params">(List&lt;Comment&gt; comments)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">                        showData(comments);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;));</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">showData</span><span class="params">(List&lt;Comment&gt; comments)</span> </span>&#123;</span><br><span class="line">        CommentAdapter adapter = <span class="keyword">new</span> CommentAdapter(<span class="keyword">this</span>, comments);</span><br><span class="line">        recyclerView.setAdapter(adapter);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 메모리 누출 방지</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onStop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        compositeDisposable.clear();</span><br><span class="line">        <span class="keyword">super</span>.onStop();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="구현-화면"><a href="#구현-화면" class="headerlink" title="구현 화면"></a>구현 화면</h1><img src="/2018/04/16/r2nrj/r2rjtest.gif"><hr><ul><li><a href="http://square.github.io/retrofit/" target="_blank" rel="noopener">Retrofit</a></li><li><a href="https://github.com/ReactiveX/RxJava" target="_blank" rel="noopener">RxJava</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;개인 공부 후 자료를 남기기 위한 목적임으로 내용 상에 큰 문제가 있을 수도 있습니다.&lt;br&gt;잘못된 내용이 있다면 언제든지 편하게 댓글 남겨주시면 감사하겠습니다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;htt
      
    
    </summary>
    
      <category term="Android" scheme="https://devmozz.github.io/categories/Android/"/>
    
    
      <category term="Android" scheme="https://devmozz.github.io/tags/Android/"/>
    
      <category term="Retrofit" scheme="https://devmozz.github.io/tags/Retrofit/"/>
    
      <category term="RxJava" scheme="https://devmozz.github.io/tags/RxJava/"/>
    
  </entry>
  
  <entry>
    <title>Android Design Support Library - BottomNavigationView</title>
    <link href="https://devmozz.github.io/2018/04/14/bnv/"/>
    <id>https://devmozz.github.io/2018/04/14/bnv/</id>
    <published>2018-04-14T09:21:45.000Z</published>
    <updated>2018-04-16T00:20:25.648Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>개인 공부 후 자료를 남기기 위한 목적임으로 내용 상에 큰 문제가 있을 수도 있습니다.<br>잘못된 내용이 있다면 언제든지 편하게 댓글 남겨주시면 감사하겠습니다.</p></blockquote><h1 id="라이브러리-추가"><a href="#라이브러리-추가" class="headerlink" title="라이브러리 추가"></a>라이브러리 추가</h1><p>gradle(Modul:pp)에 다음과 같이 <strong>support design</strong> 라이브러리를 추가합니다.</p><p><strong>25.0.0</strong> 버전 이상부터 <strong>BottomNavigationView</strong>를 사용할 수 있게 되었습니다.</p><p><strong>27.1.0</strong> 버전을 사용하겠습니다.</p><pre><code>implementation &apos;com.android.support:design:27.1.0&apos;</code></pre><h1 id="Menu"><a href="#Menu" class="headerlink" title="Menu"></a>Menu</h1><p>일단 먼저 BottomNavigationView에 사용할 메뉴를 먼저 정의합니다.</p><p>최소 3개에서 5개까지 Item을 추가해야 한다고 <a href="https://material.io/guidelines/components/bottom-navigation.html#" target="_blank" rel="noopener">Guideline</a>에 정의되어 있습니다.</p><p>Guideline를 무시?하고 1개만 일단 정의해 보겠습니다.</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"utf-8"</span>?&gt;</span><br><span class="line">&lt;menu xmlns:android=<span class="string">"http://schemas.android.com/apk/res/android"</span></span><br><span class="line">      xmlns:app=<span class="string">"http://schemas.android.com/apk/res-auto"</span>&gt;</span><br><span class="line">    &lt;item</span><br><span class="line">        android:id=<span class="string">"@+id/bottom_nav"</span></span><br><span class="line">        android:enabled=<span class="string">"true"</span></span><br><span class="line">        android:icon=<span class="string">"@drawable/ic_room_service_black_24dp"</span></span><br><span class="line">        android:title=<span class="string">"Dummy"</span></span><br><span class="line">        app:showAsAction=<span class="string">"always"</span>/&gt;</span><br><span class="line"></span><br><span class="line">&lt;/menu&gt;</span><br></pre></td></tr></table></figure><h1 id="Layout-resource-file"><a href="#Layout-resource-file" class="headerlink" title="Layout resource file"></a>Layout resource file</h1><p>자 이제 Layout을 아래와 같이 적용해 보겠습니다.</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"utf-8"</span>?&gt;</span><br><span class="line">&lt;android.support.design.widget.CoordinatorLayout</span><br><span class="line">    xmlns:android=<span class="string">"http://schemas.android.com/apk/res/android"</span></span><br><span class="line">    xmlns:app=<span class="string">"http://schemas.android.com/apk/res-auto"</span></span><br><span class="line">    xmlns:tools=<span class="string">"http://schemas.android.com/tools"</span></span><br><span class="line">    android:id=<span class="string">"@+id/rootLayout"</span></span><br><span class="line">    android:layout_width=<span class="string">"match_parent"</span></span><br><span class="line">    android:layout_height=<span class="string">"match_parent"</span></span><br><span class="line">    tools:context=<span class="string">".MainActivity"</span>&gt;</span><br><span class="line"></span><br><span class="line">    &lt;android.support.design.widget.AppBarLayout</span><br><span class="line">        android:layout_width=<span class="string">"match_parent"</span></span><br><span class="line">        android:layout_height=<span class="string">"wrap_content"</span>&gt;</span><br><span class="line"></span><br><span class="line">        &lt;android.support.v7.widget.Toolbar</span><br><span class="line">            android:id=<span class="string">"@+id/toolbar"</span></span><br><span class="line">            android:layout_width=<span class="string">"match_parent"</span></span><br><span class="line">            android:layout_height=<span class="string">"wrap_content"</span></span><br><span class="line">            android:theme=<span class="string">"@style/ToolbarOverlay"</span></span><br><span class="line">            app:layout_scrollFlags=<span class="string">"scroll|enterAlways"</span></span><br><span class="line">            app:titleTextColor=<span class="string">"@android:color/white"</span>/&gt;</span><br><span class="line"></span><br><span class="line">    &lt;/android.support.design.widget.AppBarLayout&gt;</span><br><span class="line"></span><br><span class="line">    &lt;android.support.v7.widget.RecyclerView</span><br><span class="line">        android:id=<span class="string">"@+id/recycler"</span></span><br><span class="line">        android:layout_width=<span class="string">"match_parent"</span></span><br><span class="line">        android:layout_height=<span class="string">"match_parent"</span></span><br><span class="line">        app:layoutManager=<span class="string">"android.support.v7.widget.LinearLayoutManager"</span></span><br><span class="line">        app:layout_behavior=<span class="string">"@string/appbar_scrolling_view_behavior"</span>/&gt;</span><br><span class="line"></span><br><span class="line">    &lt;android.support.design.widget.BottomNavigationView</span><br><span class="line">        android:id=<span class="string">"@+id/bottomNav"</span></span><br><span class="line">        android:layout_gravity=<span class="string">"bottom"</span></span><br><span class="line">        android:background=<span class="string">"@android:color/white"</span></span><br><span class="line">        app:layout_behavior=<span class="string">".Behavior.BottomNavigationViewBehavior"</span></span><br><span class="line">        app:menu=<span class="string">"@menu/menu_bottom_nav"</span></span><br><span class="line">        android:layout_width=<span class="string">"match_parent"</span></span><br><span class="line">        android:layout_height=<span class="string">"wrap_content"</span>/&gt;</span><br><span class="line"></span><br><span class="line">&lt;/android.support.design.widget.CoordinatorLayout&gt;</span><br></pre></td></tr></table></figure><h1 id="Behavior"><a href="#Behavior" class="headerlink" title="Behavior"></a>Behavior</h1><p>스크롤이 아래로 내려갈 경우 BottomNavigationView와 AppBar를 숨기고 다시 위로 스크롤이 올라갈 경우 노출하길 원한다면?</p><p><strong>Behavior</strong> 을 정의하면 됩니다.</p><p>먼저 <a href="https://developer.android.com/reference/android/support/design/widget/CoordinatorLayout.Behavior.html#onStartNestedScroll(android.support.design.widget.CoordinatorLayout,%20V,%20android.view.View,%20android.view.View,%20int,%20int" target="_blank" rel="noopener">CoordinatorLayout.Behavior</a>를 <strong>extent</strong> 합니다.<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BottomNavigationViewBehavior</span> <span class="keyword">extends</span> <span class="title">CoordinatorLayout</span>.<span class="title">Behavior</span></span></span><br></pre></td></tr></table></figure></p><p>그리고 <strong>생성자</strong>를 추가해야 한다. 그렇지 않으면 <strong>Could not inflate Behavior subclass</strong> <strong>Runtime Exception</strong> 에러가 생긴다.<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">BottomNavigationViewBehaviour</span><span class="params">()</span> </span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">BottomNavigationViewBehaviour</span><span class="params">(Context context, AttributeSet attrs)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">super</span>(context, attrs);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><strong>onStartNestedScroll</strong>, <strong>onNestedScroll</strong>를 <strong>Override</strong>합니다.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//CoordinatorLayout의 자손이 중첩 된 스크롤을 시작하려고 할 때 호출됩니다.</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onStartNestedScroll</span><span class="params">(@NonNull CoordinatorLayout coordinatorLayout, @NonNull View child, @NonNull View directTargetChild, @NonNull View target, <span class="keyword">int</span> axes, <span class="keyword">int</span> type)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//스크롤을 시작할 때 발생 SCROLL_AXIS_HORIZONTAL, SCROLL_AXIS_VERTICA</span></span><br><span class="line">        <span class="keyword">return</span> axes == ViewCompat.SCROLL_AXIS_VERTICAL;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//진행 중 스크롤이 갱신되어 타겟이 스크롤 되거나 스크롤 하려고 했을 때 호출됩니다.</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onNestedScroll</span><span class="params">(@NonNull CoordinatorLayout coordinatorLayout, @NonNull View child, @NonNull View target, <span class="keyword">int</span> dxConsumed, <span class="keyword">int</span> dyConsumed, <span class="keyword">int</span> dxUnconsumed, <span class="keyword">int</span> dyUnconsumed, <span class="keyword">int</span> type)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">super</span>.onNestedScroll(coordinatorLayout, child, target, dxConsumed, dyConsumed, dxUnconsumed, dyUnconsumed, type);</span><br><span class="line"></span><br><span class="line">      <span class="comment">//Behavior을 가진 View(child)</span></span><br><span class="line">      <span class="comment">//setTranslationY: 상단 위치를 기준으로 수직 위치를 설정합니다.</span></span><br><span class="line">      <span class="comment">//getTranslationY: 상단 위치를 기준으로 하고 Layout에 배치된 위치에 추가하여 개체의 위치를 효과적으로 지정할 수 있습니다.</span></span><br><span class="line">      <span class="comment">//dyConsumed: 타겟의 스크롤 조작으로 인해 소비된 수직 픽셀</span></span><br><span class="line">      child.setTranslationY(Math.max(<span class="number">0f</span>, Math.min(Float.parseFloat(String.valueOf(child.getHeight())), child.getTranslationY() + dyConsumed)));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>위에서 작업한 <strong>menu</strong>와 <strong>behavior</strong>를 정의하겠습니다.</p><ul><li><strong>app:menu=”@menu/menu_bottom_nav”</strong></li><li><strong>app:layout_behavior=”.Behavior.BottomNavigationViewBehavior”</strong></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;android.support.design.widget.BottomNavigationView</span><br><span class="line">        android:id=<span class="string">"@+id/bottomNav"</span></span><br><span class="line">        android:layout_gravity=<span class="string">"bottom"</span></span><br><span class="line">        android:background=<span class="string">"@android:color/white"</span></span><br><span class="line">        app:layout_behavior=<span class="string">".Behavior.BottomNavigationViewBehavior"</span></span><br><span class="line">        app:menu=<span class="string">"@menu/menu_bottom_nav"</span></span><br><span class="line">        android:layout_width=<span class="string">"match_parent"</span></span><br><span class="line">        android:layout_height=<span class="string">"wrap_content"</span>/&gt;</span><br></pre></td></tr></table></figure><h1 id="RecyclerView-Adapter"><a href="#RecyclerView-Adapter" class="headerlink" title="RecyclerView Adapter"></a>RecyclerView Adapter</h1><p>자! 이제 <strong>RecyclerView</strong>를 사용하여 <strong>Adapter</strong> 구현하겠습니다.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DummyAdapter</span> <span class="keyword">extends</span> <span class="title">RecyclerView</span>.<span class="title">Adapter</span>&lt;<span class="title">DummyAdapter</span>.<span class="title">ViewHolder</span>&gt; </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Context context;</span><br><span class="line">    <span class="comment">// Dummy data</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;String&gt; dummyList;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">DummyAdapter</span><span class="params">(Context context, List&lt;String&gt; dummyList)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.context = context;</span><br><span class="line">        <span class="keyword">this</span>.dummyList = dummyList;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@NonNull</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ViewHolder <span class="title">onCreateViewHolder</span><span class="params">(@NonNull ViewGroup parent, <span class="keyword">int</span> viewType)</span> </span>&#123;</span><br><span class="line">        View view = LayoutInflater.from(parent.getContext())</span><br><span class="line">                .inflate(R.layout.item_row, parent, <span class="keyword">false</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> ViewHolder(view);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onBindViewHolder</span><span class="params">(@NonNull ViewHolder holder, <span class="keyword">int</span> position)</span> </span>&#123;</span><br><span class="line">        holder.txtName.setText(dummyList.get(position));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getItemCount</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> dummyList.size();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">ViewHolder</span> <span class="keyword">extends</span> <span class="title">RecyclerView</span>.<span class="title">ViewHolder</span> </span>&#123;</span><br><span class="line">        <span class="keyword">private</span> TextView txtName;</span><br><span class="line"></span><br><span class="line">        ViewHolder(View itemView) &#123;</span><br><span class="line">            <span class="keyword">super</span>(itemView);</span><br><span class="line"></span><br><span class="line">            txtName = (TextView) itemView.findViewById(R.id.txtName);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Click-event"><a href="#Click-event" class="headerlink" title="Click event"></a>Click event</h1><p>item.getItemId를 불러와 각 메뉴의 action을 정의하여 사용하시면 됩니다.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">bottomNavigationView.setOnNavigationItemSelectedListener(<span class="keyword">new</span> BottomNavigationView.OnNavigationItemSelectedListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onNavigationItemSelected</span><span class="params">(@NonNull MenuItem item)</span> </span>&#123;</span><br><span class="line">                <span class="keyword">switch</span> (item.getItemId()) &#123;</span><br><span class="line">                  <span class="keyword">case</span>: R.id.action</span><br><span class="line">                  &lt;-- 생략 --&gt;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                  <span class="keyword">case</span>: R.id.action</span><br><span class="line">                  &lt;-- 생략 --&gt;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;</span><br></pre></td></tr></table></figure><h1 id="임의에-Data를-넣고-구현"><a href="#임의에-Data를-넣고-구현" class="headerlink" title="임의에 Data를 넣고 구현"></a>임의에 Data를 넣고 구현</h1><p>아래와 같이 Dummy data를 넣고 구현한 Sample입니다.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> List&lt;String&gt; dummyList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">  &lt;-- 생략 --&gt;</span><br><span class="line">  getDummyData();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">getDummyData</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">50</span>; i++) &#123;</span><br><span class="line">        dummyList.add(<span class="keyword">new</span> StringBuilder(<span class="string">"Dummy Item"</span>).append(i + <span class="number">1</span>).toString());</span><br><span class="line">    &#125;</span><br><span class="line">    DummyAdapter adapter = <span class="keyword">new</span> DummyAdapter(<span class="keyword">this</span>, dummyList);</span><br><span class="line">    recyclerView.setAdapter(adapter);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="/2018/04/14/bnv/bottomnavigationview.gif"><hr><ul><li><a href="https://material.io/guidelines/components/bottom-navigation.html" target="_blank" rel="noopener">Material Design - Bottom navigation</a></li><li><a href="https://developer.android.com/reference/android/support/design/widget/BottomNavigationView.html" target="_blank" rel="noopener">Developers - BottomNavigationView</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;개인 공부 후 자료를 남기기 위한 목적임으로 내용 상에 큰 문제가 있을 수도 있습니다.&lt;br&gt;잘못된 내용이 있다면 언제든지 편하게 댓글 남겨주시면 감사하겠습니다.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;라이브러리-추
      
    
    </summary>
    
      <category term="Android" scheme="https://devmozz.github.io/categories/Android/"/>
    
    
      <category term="Android" scheme="https://devmozz.github.io/tags/Android/"/>
    
      <category term="Android Design Widget" scheme="https://devmozz.github.io/tags/Android-Design-Widget/"/>
    
      <category term="Support Library" scheme="https://devmozz.github.io/tags/Support-Library/"/>
    
  </entry>
  
</feed>
